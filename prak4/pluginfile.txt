Первые две команды - команды условного перехода. Для всех вариантов при тестировании установить полупериод синхросигнала 10 ns. На входе ядра установить буфер типа PLL/MMCM для деления частоты на 2.

Билет 1. Бадран
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 2. Болдырев
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 3. Волков
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 4. Гридасов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 5. Заика
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Разработать демонстрационную программу. Провести тестирование.


Билет 6. Ирхин
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 7. Кабанов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 8. Казубов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Разработать демонстрационную программу. Провести тестирование.


Билет 9. Кочергин
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 10. Лобанов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 11. Лузгин
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 12. Микоян
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Разработать демонстрационную программу. Провести тестирование.


Билет 13. Поляк
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 14. Поляков
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 15. Пронин
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 16. Рахимов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 17. Рзгоян
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Разработать демонстрационную программу. Провести тестирование.


Билет 18. Самохвалов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 19. Самсонов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 20. Свиридов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 21. Стародубов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 22. Степаненков
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 23. Тришин
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 24. Юшков
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.

Андреев Дмитрий Алексеевич

Дан модуль с описанием схемы на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированной схемы на кристалл ПЛИС xc7a100tcsg324-1 с учётом следующего ограничения: компоненты схемы должны располагаться в ячейке SLICE_X40Y130.
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле.
Файл модуля: main_2_1.v

Реализовать процессорное ядро последовательного типа на языке Verilog.
Тип архитектуры: Гарвардская
Количество стадий: 3
Компонентный состав: регистровый файл (РОН), память данных, память команд, счётчик команд, регистр команды, регистры операндов, регистр результата (при необходимости)
Размеры для РОН, памяти данных и памяти команд определяютcя разработчиком.
Архитектура системы команд:
(1) Команда: Побитовая дизъюнкция. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
(2) Команда: Переместить из памяти данных в регистр РОН. Формат команды: Код операции | Адрес для записи | Адрес для чтения.
(3) Команда: Побитовая эквивалентность. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН / результата в РОН.
(4) Команда: Загрузка литерала в память данных. Формат команды: Код операции | Адрес для записи | Литерал.
(5) Команда: Вычитание. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать все модули проекта, а также результаты верификации проекта при помощи симуляции.


Буланов Алексей Владимирович

Дан модуль с описанием схемы на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированной схемы на кристалл ПЛИС xc7a100tcsg324-1 с учётом следующего ограничения: компоненты схемы должны располагаться в ячейке SLICE_X80Y118.
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле.
Файл модуля: main_2_2.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Сумма двух чисел, умноженная на их разность.


Быков Константин Павлович

Даны таблицы со значениями функций синуса и косинуса для углов, выраженных в BAM.
Описать модуль на языке Verilog, реализующий интерфейс доступа к значениям из приведённых таблиц.
Провести верификацию работы модуля при помощи симуляции для всех значений углов, определённых в рамках приведённых таблиц.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также результаты верификации проекта.
Файлы модулей: sin_table_a10_d32.vh, cos_table_a10_d32.vh.

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Проверка суммы трёх чисел на делимость на число.


Ванин Тимур Владимирович

Даны таблицы со значениями функций синуса и косинуса для углов, выраженных в BAM.
Описать модуль на языке Verilog, реализующий интерфейс доступа к значениям из приведённых таблиц.
Провести верификацию работы модуля при помощи симуляции для всех значений углов, определённых в рамках приведённых таблиц.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также результаты верификации проекта.
Файлы модулей: sin_table_a8_d64.vh, cos_table_a8_d64.vh.

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Определение чётности и нечётности суммы нескольких чисел.


Воробьев Дмитрий Максимович

Даны таблицы со значениями функций синуса и косинуса для углов, выраженных в BAM.
Описать модуль на языке Verilog, реализующий интерфейс доступа к значениям из приведённых таблиц.
Провести верификацию работы модуля при помощи симуляции для всех значений углов, определённых в рамках приведённых таблиц.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также результаты верификации проекта.
Файлы модулей: sin_table_a7_d16.vh, cos_table_a7_d16.vh.

Реализовать процессорное ядро последовательного типа на языке Verilog.
Тип архитектуры: Гарвардская
Количество стадий: 3
Компонентный состав: регистровый файл (РОН), память данных, память команд, счётчик команд, регистр команды, регистры операндов, регистр результата (при необходимости)
Размеры для РОН, памяти данных и памяти команд определяютcя разработчиком.
Архитектура системы команд:
(1) Команда: Умножение. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН | Адрес результата в РОН.
(2) Команда: Побитовая эквивалентность. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН | Адрес результата в РОН.
(3) Команда: Переместить из регистра РОН в регистр РОН. Формат команды: Код операции | Адрес для записи | Адрес для чтения.
(4) Команда: Условный переход (результат на АЛУ > 0). Формат команды: Код операции | Адрес команды.
(5) Команда: Загрузка литерала в память данных. Формат команды: Код операции | Адрес для записи | Литерал.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать все модули проекта, а также результаты верификации проекта при помощи симуляции.


Горохов Михаил Павлович

Описать модуль на языке Verilog, реализующий вычисление трансцендентых функций синуса и косинуса при помощи алгоритма CORDIC.
Размерность шин и регистров (в битах) 16. Количество стадий: 15. Провести верификацию устройства при помощи симуляции.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также результаты верификации проекта.
Дополнительные файлы: atan_table_d16_s15.vh

Реализовать процессорное ядро последовательного типа на языке Verilog.
Тип архитектуры: Гарвардская
Количество стадий: 3
Компонентный состав: регистровый файл (РОН), память данных, память команд, счётчик команд, регистр команды, регистры операндов, регистр результата (при необходимости)
Размеры для РОН, памяти данных и памяти команд определяютcя разработчиком.
Архитектура системы команд:
(1) Команда: Модуль. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
(2) Команда: Логический сдвиг вправо. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
(3) Команда: Условный переход (результат на АЛУ != 0). Формат команды: Код операции | Адрес команды.
(4) Команда: Деление. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН | Адрес операнда 2 в РОН.
(5) Команда: Побитовая конъюнкция. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать все модули проекта, а также результаты верификации проекта при помощи симуляции.


Гурский Никита Александрович

Описать модуль на языке Verilog, реализующий вычисление трансцендентых функций синуса и косинуса при помощи алгоритма CORDIC.
Размерность шин и регистров (в битах) 64. Количество стадий: 63. Провести верификацию устройства при помощи симуляции.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также результаты верификации проекта.
Дополнительные файлы: atan_table_d64_s63.vh

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Вычисление процентного изменения между двумя числами.


Загулин Алексей Львович

Даны модули на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированных схем в рамках модулей на кристалл ПЛИС xc7a100tcsg324-1 в тактовых регионах по следующему принципу:
- mux_decoder_reg в тактовый регион X0Y0,
- t_flip_flop_encoder_mux в тактовый регион X1Y3
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле. 
Файлы модулей: mux_decoder_reg.v, t_flip_flop_encoder_mux.v, top_22.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Среднее арифметическое трёх чисел.


Зырянов Максим Алексеевич

Дан модуль с описанием схемы на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированной схемы на кристалл ПЛИС xc7a100tcsg324-1 с учётом следующего ограничения: компоненты схемы должны располагаться в ячейке SLICE_X77Y199.
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле.
Файл модуля: main_3_13.v

Реализовать процессорное ядро последовательного типа на языке Verilog.
Тип архитектуры: Гарвардская
Количество стадий: 3
Компонентный состав: регистровый файл (РОН), память данных, память команд, счётчик команд, регистр команды, регистры операндов, регистр результата (при необходимости)
Размеры для РОН, памяти данных и памяти команд определяютcя разработчиком.
Архитектура системы команд:
(1) Команда: Побитовое сложение по модулю 2. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН | Адрес результата в РОН.
(2) Команда: Побитовая операция И-НЕ. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН / результата в РОН.
(3) Команда: Умножение. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН | Адрес операнда 2 в РОН.
(4) Команда: Логический сдвиг влево. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
(5) Команда: Арифметический сдвиг влево. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать все модули проекта, а также результаты верификации проекта при помощи симуляции.


Игнатов Илья Александрович

Даны таблицы со значениями функций синуса и косинуса для углов, выраженных в BAM.
Описать модуль на языке Verilog, реализующий интерфейс доступа к значениям из приведённых таблиц.
Провести верификацию работы модуля при помощи симуляции для всех значений углов, определённых в рамках приведённых таблиц.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также результаты верификации проекта.
Файлы модулей: sin_table_a9_d32.vh, cos_table_a9_d32.vh.

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Сумма цифр нескольких чисел.


Караваев Иван Игоревич

Описать модуль на языке Verilog, реализующий вычисление трансцендентых функций синуса и косинуса при помощи алгоритма CORDIC.
Размерность шин и регистров (в битах) 32. Количество стадий: 31. Провести верификацию устройства при помощи симуляции.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также результаты верификации проекта.
Дополнительные файлы: atan_table_d32_s31.vh

Реализовать процессорное ядро последовательного типа на языке Verilog.
Тип архитектуры: Гарвардская
Количество стадий: 3
Компонентный состав: регистровый файл (РОН), память данных, память команд, счётчик команд, регистр команды, регистры операндов, регистр результата (при необходимости)
Размеры для РОН, памяти данных и памяти команд определяютcя разработчиком.
Архитектура системы команд:
(1) Команда: Умножение. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН | Адрес результата в РОН.
(2) Команда: Побитовая эквивалентность. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН | Адрес результата в РОН.
(3) Команда: Переместить из регистра РОН в регистр РОН. Формат команды: Код операции | Адрес для записи | Адрес для чтения.
(4) Команда: Условный переход (результат на АЛУ > 0). Формат команды: Код операции | Адрес команды.
(5) Команда: Загрузка литерала в память данных. Формат команды: Код операции | Адрес для записи | Литерал.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать все модули проекта, а также результаты верификации проекта при помощи симуляции.


Ким Никита Сергеевич

Для модуля согласно варианту произвести балансировку конвейерного вычислителя для удовлетворения требований по частоте работы устройства (200 МГц).
Раскладку производить на xc7a100tcsg324-1. Произвести верификацию устройства при помощи симуляции.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также скриншоты результата размещения компонентов на кристалле и таблицы по показателю Slack. 
Файл модуля: main2.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Умножение числа на сумму его цифр.


Кириенко Кирилл Александрович

Дан модуль с описанием схемы на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированной схемы на кристалл ПЛИС xc7a100tcsg324-1 с учётом следующего ограничения: компоненты схемы должны располагаться в ячейке SLICE_X28Y23.
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле.
Файл модуля: main_3_11.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Сумма кубов трёх чисел.


Кравченко Иван Васильевич

Дан модуль с описанием схемы на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированной схемы на кристалл ПЛИС xc7a100tcsg324-1 с учётом следующего ограничения: компоненты схемы должны располагаться в ячейке SLICE_X67Y124.
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле.
Файл модуля: main_4_20.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Сумма первых N чётных чисел.


Лобода Антон Сергеевич

Для модуля согласно варианту произвести балансировку конвейерного вычислителя для удовлетворения требований по частоте работы устройства (200 МГц).
Раскладку производить на xc7a100tcsg324-1. Произвести верификацию устройства при помощи симуляции.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также скриншоты результата размещения компонентов на кристалле и таблицы по показателю Slack. 
Файл модуля: main1.v

Реализовать процессорное ядро последовательного типа на языке Verilog.
Тип архитектуры: Гарвардская
Количество стадий: 3
Компонентный состав: регистровый файл (РОН), память данных, память команд, счётчик команд, регистр команды, регистры операндов, регистр результата (при необходимости)
Размеры для РОН, памяти данных и памяти команд определяютcя разработчиком.
Архитектура системы команд:
(1) Команда: Побитовая операция И-НЕ. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
(2) Команда: Побитовое сложение по модулю 2. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН / результата в РОН.
(3) Команда: Переместить из регистра РОН в регистр РОН. Формат команды: Код операции | Адрес для записи | Адрес для чтения.
(4) Команда: Деление. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН | Адрес операнда 2 в РОН.
(5) Команда: Логический сдвиг влево. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать все модули проекта, а также результаты верификации проекта при помощи симуляции.


Малыхина Екатерина Владимировна

Для модуля согласно варианту произвести балансировку конвейерного вычислителя для удовлетворения требований по частоте работы устройства (200 МГц).
Раскладку производить на xc7a100tcsg324-1. Произвести верификацию устройства при помощи симуляции.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также скриншоты результата размещения компонентов на кристалле и таблицы по показателю Slack. 
Файл модуля: main23.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Куб суммы трёх чисел.


Махов Ярослав Александрович

Даны таблицы со значениями функций синуса и косинуса для углов, выраженных в BAM.
Описать модуль на языке Verilog, реализующий интерфейс доступа к значениям из приведённых таблиц.
Провести верификацию работы модуля при помощи симуляции для всех значений углов, определённых в рамках приведённых таблиц.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также результаты верификации проекта.
Файлы модулей: sin_table_a4_d64.vh, cos_table_a4_d64.vh.

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Введите число и процент, увеличьте число на этот процент и затем уменьшите на тот же процент.


Медведев Антон Григорьевич

Даны модули на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированных схем в рамках модулей на кристалл ПЛИС xc7a100tcsg324-1 в тактовых регионах по следующему принципу:
- reg_decoder_mux в тактовый регион X1Y1,
- reg_mux_decoder в тактовый регион X0Y2
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле. 
Файлы модулей: reg_decoder_mux.v, reg_mux_decoder.v, top_16.v

Реализовать процессорное ядро последовательного типа на языке Verilog.
Тип архитектуры: Гарвардская
Количество стадий: 3
Компонентный состав: регистровый файл (РОН), память данных, память команд, счётчик команд, регистр команды, регистры операндов, регистр результата (при необходимости)
Размеры для РОН, памяти данных и памяти команд определяютcя разработчиком.
Архитектура системы команд:
(1) Команда: Условный переход (результат на АЛУ > 0). Формат команды: Код операции | Адрес команды.
(2) Команда: Деление. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН | Адрес результата в РОН.
(3) Команда: Умножение. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН | Адрес результата в РОН.
(4) Команда: Загрузка литерала в регистр РОН. Формат команды: Код операции | Адрес для записи | Литерал.
(5) Команда: Остаток от деления. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать все модули проекта, а также результаты верификации проекта при помощи симуляции.


Павловская Дарья Владимировна

Описать модуль на языке Verilog, реализующий вычисление трансцендентых функций синуса и косинуса при помощи алгоритма CORDIC.
Размерность шин и регистров (в битах) 32. Количество стадий: 31. Провести верификацию устройства при помощи симуляции.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также результаты верификации проекта.
Дополнительные файлы: atan_table_d32_s31.vh

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Квадрат суммы и квадрат разности.


Пархоменко Владимир Сергеевич

Даны модули на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированных схем в рамках модулей на кристалл ПЛИС xc7a100tcsg324-1 в тактовых регионах по следующему принципу:
- reg_encoder_mux в тактовый регион X0Y1,
- t_flip_flop_encoder_mux в тактовый регион X0Y2
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле. 
Файлы модулей: reg_encoder_mux.v, t_flip_flop_encoder_mux.v, top_26.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Вычисление корней квадратного уравнения вида ax² + bx + c = 0.


Петрова Ольга Алексеевна

Дан модуль с описанием схемы на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированной схемы на кристалл ПЛИС xc7a100tcsg324-1 с учётом следующего ограничения: компоненты схемы должны располагаться в ячейке SLICE_X24Y24.
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле.
Файл модуля: main_4_18.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Квадрат суммы и квадрат разности.


Пономаренко Григорий Владимирович

Даны модули на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированных схем в рамках модулей на кристалл ПЛИС xc7a100tcsg324-1 в тактовых регионах по следующему принципу:
- encoder_flip_flop_mux в тактовый регион X1Y3,
- t_flip_flop_encoder_mux в тактовый регион X1Y1
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле. 
Файлы модулей: encoder_flip_flop_mux.v, t_flip_flop_encoder_mux.v, top_29.v

Реализовать процессорное ядро последовательного типа на языке Verilog.
Тип архитектуры: Гарвардская
Количество стадий: 3
Компонентный состав: регистровый файл (РОН), память данных, память команд, счётчик команд, регистр команды, регистры операндов, регистр результата (при необходимости)
Размеры для РОН, памяти данных и памяти команд определяютcя разработчиком.
Архитектура системы команд:
(1) Команда: Умножение. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
(2) Команда: Остаток от деления. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН / результата в РОН.
(3) Команда: Побитовая операция И-НЕ. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН / результата в РОН.
(4) Команда: Деление. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН | Адрес результата в РОН.
(5) Команда: Остаток от деления. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН | Адрес операнда 2 в РОН.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать все модули проекта, а также результаты верификации проекта при помощи симуляции.


Рассказов Григорий Сергеевич

Дан модуль с описанием схемы на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированной схемы на кристалл ПЛИС xc7a100tcsg324-1 с учётом следующего ограничения: компоненты схемы должны располагаться в ячейке SLICE_X67Y127.
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле.
Файл модуля: main_4_16.v

Реализовать процессорное ядро последовательного типа на языке Verilog.
Тип архитектуры: Гарвардская
Количество стадий: 3
Компонентный состав: регистровый файл (РОН), память данных, память команд, счётчик команд, регистр команды, регистры операндов, регистр результата (при необходимости)
Размеры для РОН, памяти данных и памяти команд определяютcя разработчиком.
Архитектура системы команд:
(1) Команда: Сложение. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН | Адрес операнда 2 в РОН.
(2) Команда: Побитовое сложение по модулю 2. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН | Адрес результата в РОН.
(3) Команда: Побитовая дизъюнкция. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН / результата в РОН.
(4) Команда: Побитовая конъюнкция. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН / результата в РОН.
(5) Команда: Побитовая конъюнкция. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН | Адрес операнда 2 в РОН.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать все модули проекта, а также результаты верификации проекта при помощи симуляции.


Редькин Руслан Владимирович

Дан модуль с описанием схемы на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированной схемы на кристалл ПЛИС xc7a100tcsg324-1 с учётом следующего ограничения: компоненты схемы должны располагаться в ячейке SLICE_X47Y103.
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле.
Файл модуля: main_3_7.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Сумма первых N нечётных чисел.


Рыбачек Степан Михайлович

Описать модуль на языке Verilog, реализующий вычисление трансцендентых функций синуса и косинуса при помощи алгоритма CORDIC.
Размерность шин и регистров (в битах) 64. Количество стадий: 63. Провести верификацию устройства при помощи симуляции.
В качестве ответа предоставить отчёт в формате .pdf, содержащий все модули проекта, а также результаты верификации проекта.
Дополнительные файлы: atan_table_d64_s63.vh

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Периметр и площадь квадрата по длине его стороны.


Сачук Андрей Александрович

Даны модули на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированных схем в рамках модулей на кристалл ПЛИС xc7a100tcsg324-1 в тактовых регионах по следующему принципу:
- d_flip_flop_mux_reg в тактовый регион X0Y0,
- d_ff_reg_encoder в тактовый регион X0Y3
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле. 
Файлы модулей: d_flip_flop_mux_reg.v, d_ff_reg_encoder.v, top_7.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Нахождение площади окружности и её длины.


Столяров Вячеслав Сергеевич

Дан модуль с описанием схемы на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированной схемы на кристалл ПЛИС xc7a100tcsg324-1 с учётом следующего ограничения: компоненты схемы должны располагаться в ячейке SLICE_X39Y157.
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле.
Файл модуля: main_4_15.v

Реализовать процессорное ядро последовательного типа на языке Verilog.
Тип архитектуры: Гарвардская
Количество стадий: 3
Компонентный состав: регистровый файл (РОН), память данных, память команд, счётчик команд, регистр команды, регистры операндов, регистр результата (при необходимости)
Размеры для РОН, памяти данных и памяти команд определяютcя разработчиком.
Архитектура системы команд:
(1) Команда: Умножение. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН.
(2) Команда: Остаток от деления. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН / результата в РОН.
(3) Команда: Побитовая операция И-НЕ. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН / результата в РОН.
(4) Команда: Деление. Формат команды: Код операции | Адрес операнда 1 в РОН | Адрес операнда 2 в РОН | Адрес результата в РОН.
(5) Команда: Остаток от деления. Формат команды: Код операции | Адрес операнда 1 в РОН / результата в РОН | Адрес операнда 2 в РОН.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать все модули проекта, а также результаты верификации проекта при помощи симуляции.


Сытина Ксения Витальевна

Дан модуль с описанием схемы на языке Verilog. Провести синтез RTL-модели.
Выполнить размещение синтезированной схемы на кристалл ПЛИС xc7a100tcsg324-1 с учётом следующего ограничения: компоненты схемы должны располагаться в ячейке SLICE_X67Y124.
В качестве ответа предоставить отчёт в формате .pdf, содержащий файл проектных ограничений и скриншоты результата размещения компонентов на кристалле.
Файл модуля: main_4_20.v

Построить архитектуру системы команды и микроархитектуру в соответствии с условием задачи.
Запись входных чисел осуществляется при помощи литеральных команд записи в память данных.
Итоговые результаты должны быть записаны в память данных после входных чисел.
В качестве ответа предоставить отчёт в формате .pdf. Отчёт должен содержать:
- описание шагов алгоритма в виде блок-схемы с указанием номеров команд;
- таблицу, содержащую форматы команд;
- значения параметров компонентов (регистровый файл, память данных, память команд, счётчик команд, регистр команды, регистры операндов/результата);
- таблица с описанием выполнения каждой команды на всех стадиях процессорного ядра.
Вариант: Вычисление процента от числа с округлением до ближайшего целого.


