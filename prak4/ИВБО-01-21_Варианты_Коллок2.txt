Билет 1. Бадран
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 2. Болдырев
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 3. Волков
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 4. Гридасов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 5. Заика
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 6. Ирхин
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 7. Кабанов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 8. Казубов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 9. Кочергин
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 10. Лобанов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 11. Лузгин
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 12. Микоян
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 13. Поляк
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 14. Поляков
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 15. Пронин
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 16. Рахимов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 17. Рзгоян
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 18. Самохвалов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 19. Самсонов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 20. Свиридов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 21. Стародубов
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Разработать демонстрационную программу. Провести тестирование.


Билет 22. Степаненков
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 23. Тришин
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 24. Юшков
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


