Первые две команды - команды условного перехода. Для всех вариантов при тестировании установить полупериод синхросигнала 10 ns. На входе ядра установить буфер типа PLL/MMCM для деления частоты на 2.

Билет 1. Андреев Евгений Михайлович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 2. Беззубкин Олег Михайлович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 3. Валентинов Егор Дмитриевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 4. Вдовиченко Павел Витальевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 5. Волков Егор Фёдорович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 6. Добровольский Денис Владиславович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 7. Заикин Егор Александрович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 8. Казиков Александр Игоревич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 9. Корнев Никита Андреевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 10. Крылов Кристиан Игоревич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 11. Курдюков Максим Сергеевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 12. Куренный Захар Евгеньевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 13. Лищеновский Андрей Александрович 	
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 14. Любченко Владислав Алексеевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 15. Морозов Дмитрий Михайлович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 16. Нечаев Глеб Максимович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 17. Орбелян Марк Варданович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 18. Покровский Никон Валерьевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 19. Сазанкин Артем Андреевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 20. Смирнов Никита Игоревич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 21. Солопов Данила Викторович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 22. Хоптяный Андрей Сергеевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 23. Чистюхин Дмитрий Сергеевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.
