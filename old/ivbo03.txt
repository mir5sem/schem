Первые две команды - команды условного перехода. Для всех вариантов при тестировании установить полупериод синхросигнала 10 ns. На входе ядра установить буфер типа PLL/MMCM для деления частоты на 2.

Билет 1. Артюхов Назар Романович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 2. Белов Александр Николаевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 3. Бережной Илья Вячеславович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 4. Бондаренко Владислав Петрович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 5. Гилас Александр Дмитриевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 6. Гусаров Андрей Андреевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 7. Давыдов Андрей Дмитриевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 8. Дайнеко Михаил Юрьевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 9. Ермаков Михаил Сергеевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 10. Канатов Алексей Александрович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 11. Кораблин Леонид Максимович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 12. Лазарев Артем Вячеславович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 13. Легоньков Алексей Сергеевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Разработать демонстрационную программу. Провести тестирование.


Билет 14. Лубкин Кирилл Игоревич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 15. Малнар Иван Желькович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 16. Парфенов Иван Николаевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 17. Рудаков Дмитрий Александрович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 2 такта. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Разработать демонстрационную программу. Провести тестирование.


Билет 18. Рябов Всеволод Михайлович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (3 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 19. Сапежинский Дмитрий Алексеевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (1 адреса), Произведение значений двух регистров (1 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 20. Симонов Станислав Игоревич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды меньше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (2 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Прямая.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.


Билет 21. Туженков Кирилл Григорьевич
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла равно нулю, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (3 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Косвенная.
Разработать демонстрационную программу. Провести тестирование.


Билет 22. Юдин Григорий Вячеславович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Последовательный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды больше нуля, Значение на заданном командой регистре регистрового файла больше нуля, Сумма значений двух регистров (1 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Разработать демонстрационную программу. Провести тестирование.


Билет 23. Юрков Роман Викторович
Разработать модуль процессорного ядра. Гарвардская архитектура. Тип ядра: Конвейерный вариант 5 тактов. 
Набор команд: Результат последней арифметико-логической команды равен нулю, Значение на заданном командой регистре регистрового файла меньше нуля, Сумма значений двух регистров (3 адреса), Разность значений двух регистров (2 адреса), Произведение значений двух регистров (2 адреса), Загрузка литерала в память, Загрузка данных из памяти в регистровый файл, Загрузка данных из регистрового файла в память.
Тип адресации: Относительная.
Аппаратно решить проблему отложенного перехода.
Аппаратно решить конфликт по данным.
Аппаратно решить конфликт по управлению.
Разработать демонстрационную программу. Провести тестирование.

